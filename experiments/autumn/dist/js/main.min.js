function prepareTexture(e,a){e.wrapS=e.wrapT=THREE.RepeatWrapping,e.repeat.set(a,a)}function loadGeo(e,a){loader.load(a,function(a,t){assets.geometry[e]=a,assets.materials[e]=t})}function loadTexture(e,a){textureLoader.load(a,function(a){assets.textures[e]=a})}function init(){function e(e,a){prepareTexture(assets.textures.bark_albedo,30),prepareTexture(assets.textures.bark_normal,30),a[0]=new THREE.MeshStandardMaterial({color:5592405,map:assets.textures.bark_albedo,bumpMap:assets.textures.bark_normal,bumpScale:.1,roughness:1,metalness:.2}),a[1]=new THREE.MeshStandardMaterial({color:10066329,map:assets.textures.leaves_albedo,transparent:!0,roughness:.9,metalness:0,alphaMap:assets.textures.leaves_alphaMap,bumpScale:.005,bumpMap:assets.textures.leaves_normal,side:THREE.DoubleSide,depthWrite:!0,depthTest:!0,alphaTest:.9,vertexColors:THREE.FaceColors}),e.faces.forEach(function(e,a){var t=-50+70*Math.random(),r=Math.floor(70*(100-t)/100);e.color.setHSL(r,Math.abs(t-50)/50,.45)});for(var t=new THREE.Mesh(assets.geometry.leaf,a[1]),r=0;50>r;r++){leaves[r]=t.clone(),leaves[r]._own={vel:{x:10*Math.random(),y:10*Math.random(),z:10*Math.random()}};var s=.75+.25*Math.random();leaves[r].scale.set(s,s,s),leaves[r].position.x=-3+6*Math.random(),leaves[r].position.z=-3+6*Math.random(),leaves[r].position.y=-3+6*Math.random(),leaves[r].rotation.x=-10+20*Math.random(),leaves[r].rotation.y=-10+20*Math.random(),leaves[r].rotation.z=-10+20*Math.random(),scene.add(leaves[r])}for(var n=[],o=0;150>o;o++){n[o]=t.clone(),n[o].position.set(-5+10*Math.random(),.1,10*-Math.random()),n[o].rotation.set(0,.1,0);var s=.75+.25*Math.random();n[o].scale.set(s,s,s),scene.add(n[o])}tree=new THREE.Mesh(e,new THREE.MeshFaceMaterial(a)),tree.receiveShadow=!0,tree.castShadow=!0,scene.add(tree)}scene=new THREE.Scene,camera=new THREE.PerspectiveCamera(55,canvas_width/canvas_height,.1,1e3),camera.position.set(10,3,-10),scene.add(camera),cubeCamera=new THREE.CubeCamera(1,1e5,128),scene.add(cubeCamera),renderer=new THREE.WebGLRenderer({alpha:!0,antialias:!0}),renderer.setSize(canvas_width,canvas_height),renderer.shadowMap.enabled=!0,renderer.shadowMap.type=THREE.PCFSoftShadowMap,renderer.gammaInput=!0,renderer.gammaOutput=!0,renderer.setClearColor(main_color,1),document.body.appendChild(renderer.domElement),controls=new THREE.OrbitControls(camera),controls.target.set(0,5,0),controls.damping=.2,controls.maxPolarAngle=110*Math.PI/180,controls.minPolarAngle=1,controls.minDistance=10,controls.maxDistance=14;var a=new THREE.AmbientLight(11184810);scene.add(a);var t=new THREE.SpotLight(16777215);t.position.set(0,50,150),t.intensity=1,t.castShadow=!0,t.angle=Math.PI/5,t.shadow.mapSize.width=1024,t.shadow.mapSize.height=1024,t.shadow.camera.near=5,t.shadow.camera.far=100,t.shadow.camera.fov=camera.fov;var r=100;t.shadow.camera.left=-r,t.shadow.camera.right=r,t.shadow.camera.top=-r,t.shadow.camera.bottom=r,scene.add(t);var s=new THREE.Color(16777215);s.setHSL(50,90,10.5);var n=new THREE.LensFlare(assets.textures.textureFlare0,700,0,THREE.AdditiveBlending,s);n.add(assets.textures.textureFlare1,512,0,THREE.AdditiveBlending),n.add(assets.textures.textureFlare1,512,0,THREE.AdditiveBlending),n.add(assets.textures.textureFlare1,512,0,THREE.AdditiveBlending),n.add(assets.textures.textureFlare2,60,.9,THREE.AdditiveBlending),n.add(assets.textures.textureFlare2,70,.7,THREE.AdditiveBlending),n.add(assets.textures.textureFlare2,120,.9,THREE.AdditiveBlending),n.customUpdateCallback=function(e){var a,t,r=e.lensFlares.length,s=2*-e.positionScreen.x,n=2*-e.positionScreen.y;for(a=0;r>a;a++)t=e.lensFlares[a],t.x=e.positionScreen.x+s*t.distance,t.y=e.positionScreen.y+n*t.distance,t.rotation=0;e.lensFlares[2].y+=.025},n.position.copy(t.position),scene.add(n);var o=new THREE.RenderPass(scene,camera);bokehPass=new THREE.BokehPass(scene,camera,{focus:1,aperture:.015,maxblur:1,width:canvas_width,height:canvas_height}),bokehPass.renderToScreen=!1;var d=new THREE.EffectComposer(renderer),i=new THREE.UnrealBloomPass(new THREE.Vector2(window.innerWidth,window.innerHeight),.25,.25,.15),l=new THREE.MeshDepthMaterial;l.depthPacking=THREE.RGBADepthPacking,l.blending=THREE.NoBlending;var u={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter};depthRenderTarget=new THREE.WebGLRenderTarget(window.innerWidth,window.innerHeight,u);var c=new THREE.ShaderPass(THREE.SSAOShader);c.renderToScreen=!0,c.uniforms.tDepth.value=depthRenderTarget.texture,c.uniforms.size.value.set(window.innerWidth,window.innerHeight),c.uniforms.cameraNear.value=camera.near,c.uniforms.cameraFar.value=camera.far,c.uniforms.onlyAO.value=1==postprocessing.renderMode,c.uniforms.aoClamp.value=.01,c.uniforms.lumInfluence.value=.5,d.addPass(o),d.addPass(i),d.addPass(bokehPass),d.addPass(c),postprocessing.composer=d,postprocessing.bokeh=bokehPass,window.onresize=function(){canvas_height=window.innerHeight,canvas_width=window.innerWidth,camera.aspect=canvas_width/canvas_height,camera.updateProjectionMatrix(),renderer.setSize(canvas_width,canvas_height)},prepareTexture(assets.textures.ground,5),prepareTexture(assets.textures.ground_normal,5),prepareTexture(assets.textures.ground_displace,10);var m=new THREE.Mesh(new THREE.PlaneBufferGeometry(50,50,512,512),new THREE.MeshStandardMaterial({color:13421772,map:assets.textures.ground,bumpMap:assets.textures.ground_normal,displacementMap:assets.textures.ground_displace,envMap:cubeCamera.renderTarget.texture,envMapIntensity:.25,displacementScale:.1,bumpScale:-.25,roughness:.8,metalness:.9}));m.geometry.verticesNeedsUpdate=!0,m.receiveShadow=!0,m.rotation.x=-90*Math.PI/180,m.rotation.z=-45*Math.PI/180,m.scale.set(1,1,1),scene.add(m);var p=new THREE.Mesh(assets.geometry.sky,new THREE.MeshBasicMaterial({color:13421772,map:assets.textures.sky}));p.scale.set(500,500,500),p.rotation.y=-90*Math.PI/180,scene.add(p),e(assets.geometry.tree,assets.materials.tree),prepareTexture(assets.textures.rock,2),prepareTexture(assets.textures.rock_normal,2);var h=new THREE.Mesh(assets.geometry.stone,new THREE.MeshStandardMaterial({color:6710886,map:assets.textures.rock,bumpMap:assets.textures.rock_normal,bumpScale:.2,envMap:cubeCamera.renderTarget.texture,roughness:1,metalness:0}));h.receiveShadow=!0,h.castShadow=!0;for(var g=[],E=0;36>E;E++)g[E]=h.clone(),g[E].position.y=.05-.05*Math.random(),g[E].rotation.y=10*E*Math.PI/180,scene.add(g[E]);var x=new THREE.Mesh(assets.geometry.ground,new THREE.MeshStandardMaterial({color:10066329,map:assets.textures.ground_nature,bumpMap:assets.textures.ground_nature_normal,roughness:1,metalness:0}));x.position.y+=.05,scene.add(x),render(time)}function animation(e){controls.rotateLeft(.0025*Math.sin(5e-4*e)),leaves.forEach(function(e,a){e.position.y-=.015,e.position.z-=.025,e.rotation.x+=.01*e._own.vel.x,e.rotation.z+=.01*e._own.vel.z,e.position.y<=-.5&&(e.position.z=-3+6*Math.random(),e.position.y=-5+14*Math.random())})}var bokehPass,main_color=0,time=0,canvas_height=window.innerHeight,canvas_width=window.innerWidth,manager=new THREE.LoadingManager,leaves=[],assets={geometry:{},textures:{},materials:{}};manager.onProgress=function(e,a,t){console.log(e,a,t),a==t&&init()};var loader=new THREE.JSONLoader(manager),textureLoader=new THREE.TextureLoader(manager),scene,camera,renderer,controls,tree,cubeCamera,postprocessing={},assetsToLoad={geometry:{tree:"assets/json/tree.json",stone:"assets/json/stone.json",sky:"assets/json/sky.json",leaf:"assets/json/leaf.json",ground:"assets/json/ground.json"},textures:{bark_albedo:"dist/textures/bark_albedo.jpg",bark_normal:"dist/textures/bark_normal.jpg",leaves_albedo:"dist/textures/leaves_albedo.jpg",leaves_alphaMap:"dist/textures/leaves_alphaMap.jpg",leaves_normal:"dist/textures/leaves_normal.jpg",ground:"dist/textures/ground.jpg",ground_normal:"dist/textures/ground_normal.jpg",ground_displace:"dist/textures/ground_displace.jpg",rock:"dist/textures/rock.jpg",rock_normal:"dist/textures/rock_normal.jpg",sky:"dist/textures/sky.jpg",ground_nature:"dist/textures/ground_nature.jpg",ground_nature_normal:"dist/textures/ground_nature_normal.jpg",textureFlare0:"dist/textures/lensflare0.png",textureFlare1:"dist/textures/lensflare2.png",textureFlare2:"dist/textures/lensflare3.png"}};for(geo in assetsToLoad.geometry)loadGeo(geo,assetsToLoad.geometry[geo]);for(tex in assetsToLoad.textures)loadTexture(tex,assetsToLoad.textures[tex]);var render=function(e){requestAnimationFrame(render),controls.update(),animation(e),postprocessing.composer.render(.1)};