var Adjust={version:.01};void 0===Object.assign&&!function(){Object.assign=function(t){"use strict";if(void 0===t||null===t)throw new TypeError("Cannot convert undefined or null to object");for(var e=Object(t),i=1;i<arguments.length;i++){var s=arguments[i];if(void 0!==s&&null!==s)for(var n in s)Object.prototype.hasOwnProperty.call(s,n)&&(e[n]=s[n])}return e}}(),Object.assign(Adjust,{dpr:window.devicePixelRatio,width:window.innerWidth*this.dpr,height:window.innerHeight*this.dpr,realWidth:window.innerWidth,realHeight:window.innerHeight,mouse:new THREE.Vector2,offset:new THREE.Vector3,objects:[],half:{width:.5*this.width/this.dpr,height:.5*this.height/this.dpr},raycaster:new THREE.Raycaster,selected:null,intersected:null,labels:[],init:function(t){this.camera=t.camera?t.camera:console.warn("camera must be present in order to initialize Adjust"),this.renderer=t.renderer?t.renderer:console.warn("renderer must be present in order to initialize Adjust"),this.scene=t.scene?t.scene:console.warn("scene must be present in order to initialize Adjust"),this.bindEvents();var e=this.renderer.getSize();this.width=e.width*this.dpr,this.height=e.height*this.dpr,this.realWidth=e.width,this.realHeight=e.height,this.resize(),this.plane=new THREE.Mesh(new THREE.PlaneBufferGeometry(200,200,8,8),new THREE.MeshPhongMaterial({visible:!1})),this.scene.add(this.plane)},bindEvents:function(){window.addEventListener("mousemove",this.onMouseMove.bind(this),!1),window.addEventListener("mousedown",this.onMouseDown.bind(this),!1),window.addEventListener("mouseup",this.onMouseUp.bind(this),!1)},randNum:function(t,e,i){var s=Math.floor(Math.random()*e)+t;return(i||"undefined"==typeof i)&&(s*=1==Math.floor(2*Math.random())?1:-1),s},addPoints:function(t){if("object"==typeof this.elements){var e=document.getElementsByClassName(t),i=[];this.domElementsBool=!0;for(var s=0;s<this.elements.length;s++)i.push(this.elements[s]);for(var n=0;n<e.length;n++)i.push(e[n]);this.elements=i}else"undefined"!=typeof t?(this.elements=document.getElementsByClassName(t),this.domElementsBool=!0):console.warn("No argument! classname required")},removePoints:function(){this.domElementsBool=!1;for(var t=0;t<this.elements.length;t++)this.elements[t].style="";this.elements=[]},addLabel:function(t){this.updateLabelsBool=!0;for(var e=document.getElementsByClassName(t),i=0;i<e.length;i++)this.labels.push(e[i]),this.scene.children.forEach(function(t,s){t.name==e[i].dataset.label&&(e[i]._dirtyCustom=t)})},updateSingleLabel:function(t){var e=0,i=0,s=0;"undefined"!=typeof t.dataset.offsetx&&(e=t.dataset.offsetx),"undefined"!=typeof t.dataset.offsety&&(i=t.dataset.offsety),"undefined"!=typeof t.dataset.offsetz&&(s=t.dataset.offsetz);var n=new THREE.Vector3,a={x:parseFloat(t._dirtyCustom.position.x)-e,y:parseFloat(t._dirtyCustom.position.y)-i,z:parseFloat(t._dirtyCustom.position.z)-s};return n.set(a.x,a.y,a.z),t.dataset.bound=this.pointInFrustum(n),this.convertVector(n),this.domElement(t,n),n},resize:function(){this.dpr=window.devicePixelRatio;var t=this.renderer.getSize();this.width=t.width*this.dpr,this.height=t.height*this.dpr,this.realWidth=t.width,this.realHeight=t.height,this.half.width=.5*this.width/this.dpr,this.half.height=.5*this.height/this.dpr},transformEl:function(t,e){t.style.webkitTransform="translateX("+e.x+"px) translateY("+e.y+"px) translateZ("+e.z+"px)",t.style.MozTransform="translateX("+e.x+"px) translateY("+e.y+"px) translateZ("+e.z+"px)",t.style.OTransform="translateX("+e.x+"px) translateY("+e.y+"px) translateZ("+e.z+"px)",t.style.transform="translateX("+e.x+"px) translateY("+e.y+"px) translateZ("+e.z+"px)"},domElement:function(t,e,i){var s=t.getBoundingClientRect().width/2,n=t.getBoundingClientRect().height/2;e.x-=s,e.y-=n,e.z=Math.max(3-e.z,.1),this.transformEl(t,e),"undefined"!=typeof i&&(t.dataset.bound=i)},convertVector:function(t){return t.project(this.camera),t.x=t.x*this.half.width+this.half.width,t.y=-(t.y*this.half.height)+this.half.height,t.z=t.z*(this.half.width/this.half.height)/2+this.half.width/this.half.height*2,t},element:function(t){var e=new THREE.Vector3;if("undefined"==typeof this.width&&this.init(),0==Object.keys(t.dataset).length)return console.warn("Missing data Attribute on Element:",t),!1;var i={x:parseFloat(t.dataset.x),y:parseFloat(t.dataset.y),z:parseFloat(t.dataset.z)};return e.set(i.x,i.y,i.z),t.dataset.bound=this.pointInFrustum(e),this.convertVector(e),this.domElement(t,e),e},setMouse:function(t){return this.mouse=t,this.mouse},normalizeMouse:function(t){var e={x:t.x/this.width*2-1,y:t.y/this.height*2+1,z:.5};return e},onMouseMove:function(t){var e=t?t:e;this.setMouse({x:e.clientX,y:e.clientY,z:.5})},checkSelected:function(){null!=this.intersected?(this.selected=this.intersected,this.selectedState(this.intersected,this.intersects)):this.selected=null},uncheckSelected:function(){this.intersected&&("undefined"!=typeof this.passivState&&this.passivState(this.intersected),this.intersected._draggable&&this.plane.position.copy(this.intersected.position)),this.intersected=null,this.selected=null},onMouseDown:function(t){var t=t?t:event;this.checkSelected()},onMouseUp:function(t){var t=t?t:event;this.uncheckSelected()},checkPointInRadius:function(t,e,i,s){var n=(t.x-e.x)*(t.x-e.x)+(t.y-e.y)*(t.y-e.y)+(t.z-e.z)*(t.z-e.z),a=[i*i*i>=n,n];return s(a[0],a[1]),a},update:function(){if(this.domElementsBool)for(var t=0;t<this.elements.length;t++)this.element(this.elements[t]);if(this.updateLabelsBool)for(var e=0;e<this.labels.length;e++)this.updateSingleLabel(this.labels[e]);if(this.activeObjectUpdate&&this.checkMouseCollision(),this.vr)for(var i=0;i<this.activeElements.length;i++)this.checkCollision(this.activeElements[i])},addActiveObject:function(t,e,i,s,n){this.activState=e,this.passivState=i,this.selectedState=s,this.activeObjectUpdate=!0,this.objects.push(t),this.addDraggable(t,n)},addDraggable:function(t,e){t._draggable=e},checkMouseCollision:function(){var t=new THREE.Vector3;return t.set(this.mouse.x/this.realWidth*2-1,2*-(this.mouse.y/this.realHeight)+1,.5),this.raycaster.setFromCamera(t,this.camera),null!=this.selected?(this.intersects=this.raycaster.intersectObject(this.plane),void(this.intersects.length>0&&(this.plane.position.copy(this.intersected.position),this.plane.lookAt(this.camera.position),this.intersected._draggable&&this.selected.position.copy(this.intersects[0].point.sub(this.offset))))):(this.intersects=this.raycaster.intersectObjects(this.objects),void(this.intersects.length>0?(this.intersected!=this.intersects[0].object&&(this.intersected&&this.passivState(this.intersected,this.intersects),this.intersected=this.intersects[0].object,this.plane.position.copy(this.intersected.position),this.plane.lookAt(this.camera.position)),this.intersected&&this.activState(this.intersected,this.intersects)):(this.intersected&&this.passivState(this.intersected,this.intersects),this.intersected=null,this.selected=null)))},distanceToCamera:function(t){var e=t.x-this.camera.position.x,i=t.y-this.camera.position.y,s=t.z-this.camera.position.z;return Math.sqrt(e*e+i*i+s*s)},objInFrustum:function(t){this.camera.updateMatrix(),this.camera.updateMatrixWorld(),this.camera.matrixWorldInverse.getInverse(camera.matrixWorld),t.updateMatrix(),t.updateMatrixWorld();var e=new THREE.Frustum;return e.setFromMatrix((new THREE.Matrix4).multiplyMatrices(this.camera.projectionMatrix,this.camera.matrixWorldInverse)),e.intersectsObject(t)},pointInFrustum:function(t){this.camera.updateMatrix(),this.camera.updateMatrixWorld(),this.camera.matrixWorldInverse.getInverse(camera.matrixWorld);var e=new THREE.Frustum;return e.setFromMatrix((new THREE.Matrix4).multiplyMatrices(this.camera.projectionMatrix,this.camera.matrixWorldInverse)),e.containsPoint(t)},mouseToSpace:function(){var t=this.coorToSpace(this.mouse.x,this.mouse.y);return t},coorToSpace:function(t,e){var i=new THREE.Vector3;i.set(t/this.realWidth*2-1,2*-(e/this.realHeight)+1,.5),i.unproject(this.camera);var s=i.sub(this.camera.position).normalize(),n=-this.camera.position.y/s.y,a=this.camera.position.clone().add(s.multiplyScalar(n));return a},spaceToCoor:function(t){var e=new THREE.Vector3(t.x,t.y,t.z),i=e.project(this.camera);return i.x=(i.x+1)/2*this.realWidth,i.y=-(i.y-1)/2*this.realHeight,i},VRPointer:function(t){this.pointerCanvas=null,this.pointer=null,this.pointerCanvasContextcanvas=null,this.midPoint=new THREE.Vector2(0,0),this.raycaster=new THREE.Raycaster,this.distanceFromCamera=t.distanceFromCamera?t.distanceFromCamera:50,this.color=t.color?t.color:"#ffffff",this.opacity=t.opacity?t.opacity:.75,this.size=t.size?t.size:1,this.duration=t.duration?t.duration:100,this.intersects=[],this.activeElements=t.activeElements?t.activeElements:[],this.time=0,this.strokeWidth=t.strokeWidth?t.strokeWidth:2;var e=256,i=e-10*this.strokeWidth,s=e-10*this.strokeWidth/2,n=e/2;this.draw=function(t,a){var r=n-10*this.strokeWidth/2;this.pointerCanvasContext.clearRect(0,0,e,e),this.pointerCanvasContext.save(),this.pointerCanvasContext.globalAlpha=1,this.pointerCanvasContext.beginPath(),this.pointerCanvasContext.arc(n,n,r,0,2*Math.PI,!1),this.pointerCanvasContext.lineWidth=10*this.strokeWidth,this.pointerCanvasContext.strokeStyle=this.color,this.pointerCanvasContext.stroke(),this.pointerCanvasContext.clip(),this.pointerCanvasContext.fillStyle=this.color,this.pointerCanvasContext.globalAlpha=this.opacity,this.pointerCanvasContext.fillRect(10*this.strokeWidth/2,s-Math.floor(t*i/a),i,Math.floor(t*i/a)),this.pointerCanvasContext.restore(),this.map.needsUpdate=!0},this.createVRPointerCanvas=function(){this.pointerCanvas=document.createElement("canvas"),this.pointerCanvas.width=e,this.pointerCanvas.height=e,this.pointerCanvas.style.position="absolute",this.pointerCanvas.style.display="none",document.body.appendChild(this.pointerCanvas),this.map=new THREE.Texture(this.pointerCanvas),this.map.needsUpdate=!0,this.pointerCanvasContext=this.pointerCanvas.getContext("2d"),this.pointer=new THREE.Mesh(new THREE.PlaneBufferGeometry(this.size,this.size,2,2),new THREE.MeshBasicMaterial({transparent:!0,map:this.map,depthWrite:!1,depthTest:!1})),this.pointer.name="referencePoint",this.pointer.lookAt(this.camera),this.pointer.position.z=-this.distanceFromCamera,this.camera.add(this.pointer),this.draw(this.pointerCanvasContext),this.vr=!0},this.removeVRPointer=function(){this.camera.remove(this.pointer),this.pointerCanvas.parentElement.removeChild(this.pointerCanvas),this.pointerCanvas=null,this.pointer=null,this.pointerCanvasContextcanvas=null,this.vr=!1},this.createVRPointerCanvas();for(var a=0;a<this.activeElements.length;a++)this.activeElements[a].time=0,this.activeElements[a].duration=this.activeElements[a].duration?this.activeElements[a].duration:this.duration,this.activeElements[a].hoverElements=null;this.checkCollision=function(t){this.raycaster.setFromCamera(this.midPoint,this.camera),this.intersects=[],this.intersects=this.raycaster.intersectObjects(t.elements);var e;if(this.intersects.length>0){for(var i=0;i<this.intersects.length;i++)e=this.intersects[i].point,"function"==typeof t.hover&&t.hover({element:this.intersects[i].object,point:e,distance:this.intersects[i].distance}),t.time===t.duration&&"function"==typeof t.click&&t.click({element:this.intersects[i].object,point:e,distance:this.intersects[i].distance}),t.time++,this.draw(t.time,t.duration);t.hoverElements=this.intersects}else t.time=0,null!==t.hoverElements&&(this.draw(t.time),"function"==typeof t.out&&t.hoverElements.forEach(function(e){t.out({element:e.object,point:e.point,distance:e.distance})}),t.hoverElements=null)}}});